name: Unit Tests iOS
on:
  push:
    branches:
      - master
jobs:
  test:
    name: Test
    runs-on: macOS-latest
    strategy:
        matrix:
          destination: ['platform=iOS Simulator,OS=13.3,name=iPhone 11 Pro']
          xcode: ['/Applications/Xcode_11.3.app/Contents/Developer']
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Cache Pods
        uses: actions/cache@v1
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Prepare env
        run: |
          pwd
          cd ios
          pod install
      - name: Build and test
        run: |
          cd ios
          xcodebuild clean build test -workspace RNMagicScript.xcworkspace -scheme RNMagicScriptHostApplication -destination "${destination}" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO -derivedDataPath Build/ -enableCodeCoverage YES || exit 1
        env:
         destination: ${{ matrix.destination }}
         DEVELOPER_DIR: ${{ matrix.xcode }}
      - name: Code Coverage
        run: |
          echo "Total coverage (based on lines): `find . -name \*.xccovreport -exec xcrun xccov view {} \; | grep '.app' | head -1 | perl -pe 's/.+?(\d+\.\d+%).+/\1/'`"
      - name: Report generation
        run: |
          gem install slather
          cd ios
          slather coverage -x --scheme RNMagicScriptHostApplication  --workspace ./RNMagicScript.xcworkspace --build-directory Build --output-directory coverage_report ./RNMagicScript.xcodeproj
          slather coverage -g --scheme RNMagicScriptHostApplication  --workspace ./RNMagicScript.xcworkspace --build-directory Build ./RNMagicScript.xcodeproj
          slather coverage --json --output-directory coverage_report --scheme RNMagicScriptHostApplication  --workspace ./RNMagicScript.xcworkspace --build-directory Build ./RNMagicScript.xcodeproj
          mv .gutter.json coverage_report/gutter.json
      - uses: actions/upload-artifact@master
        with:
          name: code-coverage-artifact-ios
          path: ios/coverage_report
      - name: Codecov update
        run: |
          cd ios
          bash <(curl -s https://codecov.io/bash) -t ${{secrets.CODECOV_TOKEN}} -f coverage_report/cobertura.xml
